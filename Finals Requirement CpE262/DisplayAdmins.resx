<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdHR0AHx8fDBoa
        GiwZGRkuGRkZLhkZGS4ZGRkuGRkZLhkZGS4ZGRkuGRkZLhkZGS4ZGRkuGRkZLhkZGS4ZGRkuGRkZLhkZ
        GS4ZGRkuGRkZLhkZGS4ZGRkuGRkZLhkZGS4ZGRkuGxsbLCMjIwsgICAAAAAAAAAAAAAAAAAAAAAAABoa
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAEBAQABkZGREYGBgfKSkpAioqKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////gAAAH4AAAB+AAAAfgAAAH8AAAD/AA
        AA/yAAAP8gAAH/IAgB/yAMB/8ADAf/AAwD/+AcA//gDAP/4BwD/8MMB//DhAf/wwwH/+AeP//gD///4B
        ////x/////////////////////////////8=
</value>
  </data>
</root>